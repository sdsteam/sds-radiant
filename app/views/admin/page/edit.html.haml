- content_for 'page_scripts', page_edit_javascripts
- content_for 'page_css' do
  :sass
    #content
      #extended-metadata
        .fieldset
          margin-left: 0
          margin-right: 0
          margin-bottom: .5em
          padding: 0
          td.label
            text-align: left
            width: 15%
            .textbox
              width: 90%
- render_region :main do |main|
  - main.edit_header do
    - if @page.new_record?
      %h1 New Page
    - else
      %h1 Edit Page
  - main.edit_form do
    - form_tag({}, {:multipart => true}) do
      = hidden_field 'page', 'lock_version'
      = render_region :form_top
      .form-area
        - render_region :form do |form|
          - form.edit_title do
            %p.title
              %label{:for=>"page_title"}
                Page Title
              = text_field "page", "title", :class => 'textbox', :maxlength => 255
          - form.edit_extended_metadata do
            #extended-metadata.row{meta_visible(:meta)}
              %table.fieldset
                = render :partial => "meta_row", :collection => @meta
                = render_region :extended_metadata
            %p.more-or-less
              %small
                %a#more-extended-metadata{meta_visible(:meta_more), :href => "#", :onclick=>toggle_javascript_for('extended-metadata')} More
                %a#less-extended-metadata{meta_visible(:meta_less), :href => "#", :onclick=>toggle_javascript_for('extended-metadata')} Less
          - form.edit_page_parts do
            #tab-control
              #tabs.tabs
                #tab-toolbar
                  = link_to_function image('plus', :alt => 'plus'), 'toggle_add_part_popup()', :title => 'Add Tab'
                  = link_to_function image('minus', :alt => 'minus'), 'if(confirm(\'Delete the current tab?\')) { tabControl.removeTab(tabControl.selected) }', :title => 'Remove Tab'

              #pages.pages
                = render :partial => 'part', :collection => @page.parts
            - render_region :parts_bottom do |parts_bottom|
              - parts_bottom.edit_layout_and_type do
                .row
                  %p
                    %label{:for=>"page_layout_id"}
                      Layout
                    = select "page", "layout_id", [['<inherit>', '']] + Layout.find(:all).map { |s| [s.name, s.id] }
                  %p
                    %label{:for=>"page_class_name"}
                      Page Type
                    = select "page", "class_name", [['<normal>', 'Page']] + Page.descendants.map { |p| [p.display_name, p.name] }.sort_by { |p| p.first }
                  %p
                    %label{:for=>"page_status_id"}
                      Status
                    = select "page", "status_id", Status.find_all.map { |s| [s.name, s.id] }, {}
                  - if @config['page.edit.published_date?']
                    %p#publication-date{:style => "display: none"}
                      %label{:for=>"page_published_at"}
                        Published At
                      = datetime_select "page", "published_at", :disabled => true
                  = render_region :layout_row
                %span.clear &nbsp;
              - parts_bottom.edit_timestamp do
                = updated_stamp @page
      - render_region :form_bottom do |form_bottom|
        - form_bottom.edit_buttons do
          - @buttons_partials.each do |partial|
            = render :partial => partial
          %p.buttons
            = save_model_button(@page)
            = save_model_and_continue_editing_button(@page)
            or
            = link_to 'Cancel', page_index_url
  - main.edit_popups do
    - content_for 'popups' do
      #add-part-popup.popup{:style => "display: none"}
        #busy.busy{:style => "display: none"}= image 'spinner.gif'
        %h3 Add Part
        - form_remote_tag(:url => page_add_part_url, :update => "pages", :position => :bottom, :loading => 'part_loading()', :complete => 'part_added()', :condition => 'valid_part_name()') do
          %div
            = hidden_field_tag 'index', @index, :id => 'part-index-field'
            = text_field_tag "part[name]", "", :id => 'part-name-field', :maxlength => 100
            = submit_tag "Add Part", :id => 'add-part-button'
          %p
            = link_to_function 'Close', "$(this).up('.popup').hide()", :class => 'close-link'

      #tag-reference-popup.popup{ :style => "display:none;" }
        %div{ :style => "float:right" }
          %label{:for=> 'search-tag-reference'} Search Tags:
          %input#search-tag-reference{ :type => "text" }/
        %h3
          Available Tags for
          %span#page-type= @page.class.display_name
        #tag-reference= tag_reference(@page.class.name)
        %p
          = link_to 'Close', '#', :class => 'close'

      #filter-reference-popup.popup{ :style => "display:none;" }
        %h3
          %span#filter-type= default_filter_name
          Reference
        #filter-reference= filter_reference(default_filter_name)
        %p
          = link_to_function 'Close', "Element.hide('filter-reference-popup')", :class => 'close-link'
      = render_region :popups